// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See http://js.arcgis.com/3.15/esri/copyright.txt and http://www.arcgis.com/apps/webappbuilder/copyright.txt for details.
//>>built
define("dojo/_base/declare dojo/_base/lang dojo/Deferred jimu/BaseWidgetSetting esri/tasks/query esri/tasks/QueryTask esri/geometry/Extent esri/geometry/geometryEngine esri/SpatialReference esri/geometry/webMercatorUtils dojo/_base/array".split(" "),function(r,m,n,t,u,v,w,p,q,x,y){return r([t],{baseClass:"jimu-widget-smartEditor-widgets-intersection",layerFieldsObj:{},queriedLayers:[],layersInvolvedInIgnoreLayerRanking:[],maxToleranceForlayer:{},completeFeatures:{},postCreate:function(){this.startup();
this.layerFieldsObj={};this.queriedLayers=[];this.maxToleranceForlayer={};this.layersInvolvedInIgnoreLayerRanking=[];this.completeFeatures=[]},startup:function(){},_canGetGeodesicBuffers:function(a){var b;b=new q(4326);return a&&x.canProject(a,b)?!0:!1},_getbufferedGeometry:function(a,b){return(a=this._canGetGeodesicBuffers(a)?p.geodesicBuffer([a],[b],"meters",!0):p.buffer([a],[b],"meters",!0))&&0<a.length?a[0]:null},getToleranceValueInMeters:function(a){var b;b=0;a&&(a.useDefault?(b=this.defaultToleranceSettings.value,
a=this.defaultToleranceSettings.unit):(b=a.value,a=a.unit),b=this.convertToMeters(b,a));return b},setMaxToleranceForLayer:function(a,b){b=this.getToleranceValueInMeters(b);0<b&&(!this.maxToleranceForlayer.hasOwnProperty(a)||this.maxToleranceForlayer[a]<b)&&(this.maxToleranceForlayer[a]=b)},convertToMeters:function(a,b){var c=a;switch(b){case "meters":c=a;break;case "feet":c=.3048*a;break;case "kilometers":c=1E3*a;break;case "miles":c=1609.34*a}return c},getDistinctLayers:function(a,b){var c,e,d;e=
new n;c=new n;d={};this.layerFieldsObj={};this.queriedLayers=[];this.ignoreLayerRanking=!1;this.drawnGeometry=b;if(a.fieldValues){for(var f in a.fieldValues){d[f]=[];for(var g=0;g<a.fieldValues[f].length;g++){var k=a.fieldValues[f][g];if("Intersection"===k.actionName&&k.enabled){k.ignoreLayerRanking&&(this.ignoreLayerRanking=!0);for(var h=0;h<k.fields.length;h++){var l=k.fields[h];-1===d[f].indexOf(l.layerId)&&d[f].push(l.layerId);-1===this.layersInvolvedInIgnoreLayerRanking.indexOf(l.layerId)&&k.ignoreLayerRanking&&
this.layersInvolvedInIgnoreLayerRanking.push(l.layerId);this.setMaxToleranceForLayer(l.layerId,l.toleranceSettings)}}}}this._getIntersectionsForEachField(d,b,c)}else c.resolve({});c.then(m.hitch(this,function(){var b={};if(a.fieldValues)for(var c in a.fieldValues){b[c]={};for(var f=0;f<a.fieldValues[c].length;f++){var d=a.fieldValues[c][f];if("Intersection"===d.actionName&&d.enabled)if(d.ignoreLayerRanking)b[c]=this._getClosestFeature(d.fields);else for(var k=0;k<d.fields.length;k++){var h,g,l;g=
d.fields[k];l=g.layerId;if(!b[c].hasOwnProperty(l)&&(h=this._getProcessedFeature(l,g.toleranceSettings))){d={};d[g.field]=h[g.field];b[c][l]=d;break}}}}e.resolve(b)}));return e.promise},_getIntersectingFeatures:function(a,b){var c,e,d,f;c=[];d=0;if(this.completeFeatures.hasOwnProperty(a)&&(f=this.completeFeatures[a],b&&(d=this.getToleranceValueInMeters(b)),0<f.length&&(d?e=this._getbufferedGeometry(this.drawnGeometry,d):this.maxToleranceForlayer.hasOwnProperty(a)&&this.maxToleranceForlayer[a]?e="point"===
this.drawnGeometry.type?this.pointToExtent(this.map,this.drawnGeometry,20):this.drawnGeometry:c=f,e)))for(a=0;a<f.length;a++)b=f[a],b.geometry&&p.intersects(e,b.geometry)&&c.push(b);return c},_getClosestFeature:function(a){var b,c,e,d,f,g=[],k;b={};for(d=0;d<a.length;d++){var h=[];e=a[d].layerId;h=this._getIntersectingFeatures(e,a[d].toleranceSettings);for(f=0;f<h.length;f++)this.drawnGeometry&&h[f].geometry&&(h[f].distanceToLocation=p.distance(this.drawnGeometry,h[f].geometry,"meters")),h[f].layerId=
e,h[f].fields?h[f].fields.push(a[d].field):h[f].fields=[a[d].field];g=g.concat(h)}0<g.length&&(g.sort(function(a,b){return a.distanceToLocation<b.distanceToLocation?-1:a.distanceToLocation>b.distanceToLocation?1:0}),c=g[0].attributes,a=this._jimuLayerInfos.getLayerOrTableInfoById(g[0].layerId).layerObject,c.esriCTUseLayerName=a.name,k={},y.forEach(g[0].fields,function(a){k[a]=c[a]}),b[g[0].layerId]=k);return b},_getProcessedFeature:function(a,b){var c,e;e=[];e=this._getIntersectingFeatures(a,b);0<
e.length&&(c=e[0].attributes,a=this._jimuLayerInfos.getLayerOrTableInfoById(a).layerObject,c.esriCTUseLayerName=a.name);return c},_getIntersectionsForEachField:function(a,b,c){var e,d;e=Object.keys(a);d=0;this.maxToleranceForlayer&&(d=Object.keys(this.maxToleranceForlayer).length);if(0<e.length){var f=e[0];(this.ignoreLayerRanking||0<d?this._asyncIntersectionRequests(a[f],b):this._syncIntersectionRequests(a[f],b)).then(m.hitch(this,function(){this.ignoreLayerRanking||0<d?a[f]&&0===a[f].length&&delete a[f]:
delete a[f];this._getIntersectionsForEachField(a,b,c)}))}else c.resolve()},_filterQueriedLayers:function(a){for(var b in this.layerFieldsObj){var c=a.indexOf(b);-1<c&&a.splice(c,1)}return a},_asyncIntersectionRequests:function(a,b,c){c||(c=new n);a=this._filterQueriedLayers(a);0<a.length?this._getIntersectedFeatures(a[0],b).then(m.hitch(this,function(e){a.splice(0,1);0<a.length?(this._asyncIntersectionRequests(a,b,c),this._intersectionResult(e)):this._intersectionResult(e,c)})):c.resolve();return c.promise},
_syncIntersectionRequests:function(a,b,c){c||(c=new n);a=this._filterQueriedLayers(a);0<a.length?this._getIntersectedFeatures(a[0],b).then(m.hitch(this,function(e){0<e.features.length?this._intersectionResult(e,c):(a.splice(0,1),0<a.length?this._syncIntersectionRequests(a,b,c):this._intersectionResult(e,c))})):c.resolve();return c.promise},_intersectionResult:function(a,b){a.layerId&&(this.layerFieldsObj[a.layerId]={},a.features&&0<a.features.length&&(this.layerFieldsObj[a.layerId]=a.featuresAttributes));
b&&b.resolve()},pointToExtent:function(a,b,c){var e=a.extent.getWidth()/a.width;c*=e;return new w(b.x-c,b.y-c,b.x+c,b.y+c,a.spatialReference)},_getAppropriateGeometryForQuery:function(a,b){this.maxToleranceForlayer.hasOwnProperty(a)?a=this._getbufferedGeometry(b,this.maxToleranceForlayer[a]):(a=b,"point"===b.type&&(a=this.pointToExtent(this.map,b,20)));return a},_getIntersectedFeatures:function(a,b){var c,e,d,f,g;c=new n;if(this._jimuLayerInfos.getLayerOrTableInfoById(a))d=this._jimuLayerInfos.getLayerOrTableInfoById(a).layerObject;
else return c.resolve({layerId:a,features:[],featuresAttributes:{}}),c.promise;g=d.objectIdField;e=new u;d=new v(d.url);e.geometry=this._getAppropriateGeometryForQuery(a,b);e.outFields=["*"];-1<this.layersInvolvedInIgnoreLayerRanking.indexOf(a)||this.maxToleranceForlayer.hasOwnProperty(a)?(e.returnGeometry=!0,e.outSpatialReference=new q(b.spatialReference.toJson())):e.returnGeometry=!1;d.execute(e,m.hitch(this,function(b){b&&b.features&&0<b.features.length?(b.features.sort(function(a,b){a=parseInt(a.attributes[g],
10);b=parseInt(b.attributes[g],10);return a<b?1:0}),f=b.features[0].attributes):(b={features:[]},f={});this.completeFeatures[a]=b.features;c.resolve({layerId:a,features:b.features,featuresAttributes:f})}),m.hitch(this,function(){this.completeFeatures[a]=[];c.resolve({layerId:a,features:[],featuresAttributes:{}})}));return c.promise}})});